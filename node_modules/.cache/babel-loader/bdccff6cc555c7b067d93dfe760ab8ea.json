{"ast":null,"code":"import _objectSpread from \"/Users/alexandroaguilar/Desarrollo/Backup/tiburon-master/aPOS/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/alexandroaguilar/Desarrollo/Backup/tiburon-master/aPOS/src/context/ContextProvider.js\";\nimport React, { Component } from 'react';\nimport purple from '@material-ui/core/colors/purple';\nimport red from '@material-ui/core/colors/red';\nimport pink from '@material-ui/core/colors/pink';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport indigo from '@material-ui/core/colors/indigo';\nimport blue from '@material-ui/core/colors/blue';\nimport cyan from '@material-ui/core/colors/cyan';\nimport teal from '@material-ui/core/colors/teal';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport orange from '@material-ui/core/colors/orange';\nimport deepOrange from '@material-ui/core/colors/green';\nimport brown from '@material-ui/core/colors/brown';\nimport grey from '@material-ui/core/colors/grey';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nimport axios from 'axios';\nimport AppContext from './AppContext';\nconst colors = [purple, red, pink, deepPurple, indigo, blue, cyan, teal, green, amber, orange, deepOrange, brown, grey, blueGrey];\n\nclass ContextProvider extends Component {\n  constructor() {\n    super();\n\n    this._getColor = () => {\n      let color = Math.floor(Math.random() * 15);\n      color = colors[color];\n      return color;\n    };\n\n    this._setView = view => {\n      this.setState({\n        view\n      });\n    };\n\n    this._setUser = user => {\n      this.setState({\n        user\n      });\n    };\n\n    this._unsetUser = () => {\n      this.setState({\n        user: null\n      });\n    };\n\n    this._setCustomers = () => {\n      axios.get(this.server + '/customers').then(response => {\n        if (response.data.length > 0) {\n          let customers = response.data.map(customer => _objectSpread({}, customer, {\n            color: this._getColor()[500]\n          }));\n          this.setState({\n            customers\n          });\n        }\n      }).catch(error => {\n        this._showAlert('No se pudo conectar con el servidor', 'Error');\n      });\n    };\n\n    this._setProducts = () => {\n      axios.get(this.server + '/products').then(response => {\n        this.setState({\n          products: response.data\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this._setMovements = movementType => {\n      axios.get(this.server + '/sales?movementType=' + movementType).then(response => {\n        this.setState({\n          movements: response.data\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this._setSales = () => {\n      axios.get(this.server + '/sales?movementType=4').then(response => {\n        this.setState({\n          sales: response.data\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this._setPayments = () => {\n      axios.get(this.server + '/payments').then(response => {\n        this.setState({\n          payments: response.data\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this._showAlert = (msg, title) => {\n      this.setState({\n        alert: {\n          show: 1,\n          title: title,\n          msg: msg\n        }\n      });\n      setTimeout(() => {\n        this._hideAlert(msg, title);\n      }, 4000);\n    };\n\n    this._hideAlert = (msg, title) => {\n      this.setState({\n        alert: {\n          show: 0,\n          title: title,\n          msg: msg\n        }\n      });\n    };\n\n    this.state = {\n      user: {\n        personal_name: 'Alexandro Aguilar',\n        personal_id: 1\n      },\n      sales: [],\n      deposits: [],\n      movements: [],\n      payments: [],\n      products: [],\n      customers: [],\n      alert: {\n        show: 0,\n        title: '',\n        msg: ''\n      },\n      view: 'Inicio'\n    };\n    this.server = 'http://192.168.100.153:8000';\n  }\n\n  componentDidMount() {\n    this._setCustomers();\n\n    this._setProducts();\n\n    this._setSales();\n\n    this._setMovements(4);\n  }\n\n  render() {\n    return React.createElement(AppContext.Provider, {\n      value: {\n        server: this.server,\n        state: this.state,\n        _setCustomers: this._setCustomers,\n        _setProducts: this._setProducts,\n        _setMovements: this._setMovements,\n        _showAlert: this._showAlert,\n        _hideAlert: this._hideAlert,\n        _setUser: this._setUser,\n        _unsetUser: this._unsetUser,\n        _setView: this._setView\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nexport default ContextProvider;","map":{"version":3,"sources":["/Users/alexandroaguilar/Desarrollo/Backup/tiburon-master/aPOS/src/context/ContextProvider.js"],"names":["React","Component","purple","red","pink","deepPurple","indigo","blue","cyan","teal","green","amber","orange","deepOrange","brown","grey","blueGrey","axios","AppContext","colors","ContextProvider","constructor","_getColor","color","Math","floor","random","_setView","view","setState","_setUser","user","_unsetUser","_setCustomers","get","server","then","response","data","length","customers","map","customer","catch","error","_showAlert","_setProducts","products","console","log","_setMovements","movementType","movements","_setSales","sales","_setPayments","payments","msg","title","alert","show","setTimeout","_hideAlert","state","personal_name","personal_id","deposits","componentDidMount","render","props","children"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport purple from '@material-ui/core/colors/purple';\nimport red from '@material-ui/core/colors/red';\nimport pink from '@material-ui/core/colors/pink';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport indigo from '@material-ui/core/colors/indigo';\nimport blue from '@material-ui/core/colors/blue';\nimport cyan from '@material-ui/core/colors/cyan';\nimport teal from '@material-ui/core/colors/teal';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport orange from '@material-ui/core/colors/orange';\nimport deepOrange from '@material-ui/core/colors/green';\nimport brown from '@material-ui/core/colors/brown';\nimport grey from '@material-ui/core/colors/grey';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nimport axios from 'axios';\n\nimport AppContext from './AppContext';\n\nconst colors = [\n  purple,\n  red,\n  pink,\n  deepPurple,\n  indigo,\n  blue,\n  cyan,\n  teal,\n  green,\n  amber,\n  orange,\n  deepOrange,\n  brown,\n  grey,\n  blueGrey\n];\n\nclass ContextProvider extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: {personal_name: 'Alexandro Aguilar', personal_id: 1},\n      sales: [],\n      deposits: [],\n      movements: [],\n      payments: [],\n      products: [],\n      customers: [],\n      alert: {\n        show: 0,\n        title: '',\n        msg: ''\n      },\n      view: 'Inicio'\n    }\n    this.server = 'http://192.168.100.153:8000';\n  }\n\n  componentDidMount() {\n    this._setCustomers();\n    this._setProducts();\n    this._setSales();\n    this._setMovements(4);\n  }\n\n  _getColor = () => {\n    let color = Math.floor(Math.random() * 15);\n    color = colors[color];\n    return color;\n  }\n\n  _setView = (view) => {\n    this.setState({\n      view\n    })\n  }\n\n  _setUser = (user) => {\n    this.setState({\n      user\n    })\n  }\n\n  _unsetUser = () => {\n    this.setState({\n      user: null\n    })\n  }\n\n  _setCustomers = () => {\n    axios.get(this.server + '/customers')\n    .then(response => {\n      if(response.data.length > 0) {\n        let customers = response.data.map(customer => (\n          {...customer, color: this._getColor()[500]}\n        ));\n        this.setState({\n          customers\n        })\n      }\n    })\n    .catch(error => {\n      this._showAlert('No se pudo conectar con el servidor', 'Error');\n    });\n  }\n\n  _setProducts = () => {\n    axios.get(this.server + '/products')\n    .then(response => {\n      this.setState({\n        products: response.data\n      })\n    })\n    .catch(error => {\n      console.log(error);\n    });\n  }\n\n  _setMovements = (movementType) => {\n    axios.get(this.server + '/sales?movementType=' + movementType)\n    .then(response => {\n      this.setState({\n        movements: response.data\n      })\n    })\n    .catch(error => {\n      console.log(error);\n    })\n  }\n\n  _setSales = () => {\n    axios.get(this.server + '/sales?movementType=4')\n    .then(response => {\n      this.setState({\n        sales: response.data\n      })\n    })\n    .catch(error => {\n      console.log(error);\n    })\n  }\n\n  _setPayments = () => {\n    axios.get(this.server + '/payments')\n    .then(response => {\n      this.setState({\n        payments: response.data\n      });\n    })\n    .catch(error => {\n      console.log(error);\n    })\n  }\n\n  _showAlert = (msg, title) => {\n    this.setState({\n      alert: {\n        show: 1,\n        title: title,\n        msg: msg\n      }\n    });\n    setTimeout(() => {\n      this._hideAlert(msg, title)\n    }, 4000)\n  }\n\n  _hideAlert = (msg, title) => {\n    this.setState({\n      alert: {\n        show: 0,\n        title: title,\n        msg: msg\n      }\n    });\n  }\n\n  render() {\n    return (\n      <AppContext.Provider value={{\n        server: this.server,\n        state: this.state,\n        _setCustomers: this._setCustomers,\n        _setProducts: this._setProducts,\n        _setMovements: this._setMovements,\n        _showAlert: this._showAlert,\n        _hideAlert: this._hideAlert,\n        _setUser: this._setUser,\n        _unsetUser: this._unsetUser,\n        _setView: this._setView\n      }}>\n          {this.props.children}\n      </AppContext.Provider>\n    );\n  }\n}\n\nexport default ContextProvider;"]},"metadata":{},"sourceType":"module"}