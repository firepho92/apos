{"ast":null,"code":"var _jsxFileName = \"/Users/alexandroaguilar/Desarrollo/Backup/tiburon-master/aPOS/src/screens/AdminControlScreen.js\";\nimport React from 'react';\nimport { CommandBar } from 'office-ui-fabric-react/lib/CommandBar';\nimport { CommandBarButton } from 'office-ui-fabric-react/lib/Button';\nimport { DirectionalHint } from 'office-ui-fabric-react/lib/Callout';\nimport AppContext from '../context/ContextProvider';\n\nclass AdminControlScreen extends React.Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(AppContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, context => React.createElement(\"div\", {\n      className: \"Admin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(CommandBar, {\n      overflowButtonProps: {\n        ariaLabel: 'More commands',\n        menuProps: {\n          items: [],\n          // Items must be passed for typesafety, but commandBar will determine items rendered in overflow\n          isBeakVisible: true,\n          beakWidth: 20,\n          gapSpace: 10,\n          directionalHint: DirectionalHint.topCenter\n        }\n      },\n      buttonAs: customButton,\n      items: this.getItems(),\n      ariaLabel: 'Use left and right arrow keys to navigate between commands',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default AdminControl;","map":{"version":3,"sources":["/Users/alexandroaguilar/Desarrollo/Backup/tiburon-master/aPOS/src/screens/AdminControlScreen.js"],"names":["React","CommandBar","CommandBarButton","DirectionalHint","AppContext","AdminControlScreen","Component","constructor","state","render","context","ariaLabel","menuProps","items","isBeakVisible","beakWidth","gapSpace","directionalHint","topCenter","customButton","getItems","AdminControl"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,uCAA3B;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AACA,SAASC,eAAT,QAAgC,oCAAhC;AACA,OAAOC,UAAP,MAAuB,4BAAvB;;AAEA,MAAMC,kBAAN,SAAiCL,KAAK,CAACM,SAAvC,CAAiD;AAC/CC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa,EAAb;AAGD;;AACDC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,UAAD,CAAY,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,OAAO,IACN;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACE,MAAA,mBAAmB,EAAE;AACnBC,QAAAA,SAAS,EAAE,eADQ;AAEnBC,QAAAA,SAAS,EAAE;AACTC,UAAAA,KAAK,EAAE,EADE;AACE;AACXC,UAAAA,aAAa,EAAE,IAFN;AAGTC,UAAAA,SAAS,EAAE,EAHF;AAITC,UAAAA,QAAQ,EAAE,EAJD;AAKTC,UAAAA,eAAe,EAAEd,eAAe,CAACe;AALxB;AAFQ,OADvB;AAWE,MAAA,QAAQ,EAAEC,YAXZ;AAYE,MAAA,KAAK,EAAE,KAAKC,QAAL,EAZT;AAaE,MAAA,SAAS,EAAE,4DAbb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFJ,CADF;AAuBD;;AA/B8C;;AAmCjD,eAAeC,YAAf","sourcesContent":["import React from 'react';\nimport { CommandBar } from 'office-ui-fabric-react/lib/CommandBar';\nimport { CommandBarButton } from 'office-ui-fabric-react/lib/Button';\nimport { DirectionalHint } from 'office-ui-fabric-react/lib/Callout';\nimport AppContext from '../context/ContextProvider';\n\nclass AdminControlScreen extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n\n    }\n  }\n  render() {\n    return (\n      <AppContext.Consumer>\n        {context => (\n          <div className=\"Admin\">\n            <CommandBar\n              overflowButtonProps={{\n                ariaLabel: 'More commands',\n                menuProps: {\n                  items: [], // Items must be passed for typesafety, but commandBar will determine items rendered in overflow\n                  isBeakVisible: true,\n                  beakWidth: 20,\n                  gapSpace: 10,\n                  directionalHint: DirectionalHint.topCenter\n                }\n              }}\n              buttonAs={customButton}\n              items={this.getItems()}\n              ariaLabel={'Use left and right arrow keys to navigate between commands'}\n            />\n          </div>\n        )}\n      </AppContext.Consumer>\n    );\n  }\n\n}\n\nexport default AdminControl;"]},"metadata":{},"sourceType":"module"}