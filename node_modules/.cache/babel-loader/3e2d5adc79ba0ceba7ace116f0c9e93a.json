{"ast":null,"code":"var _jsxFileName = \"/Users/alexandroaguilar/Desarrollo/tiburon-master/aPOS/src/components/Products.js\";\nimport React from 'react';\nimport AppContext from '../context/AppContext';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport Fuse from 'fuse.js';\nimport axios from 'axios';\n\nclass Products extends React.Component {\n  constructor() {\n    super();\n\n    this._handleProductClick = product => {\n      this.props._setProduct(product);\n\n      this.props._setView(2);\n    };\n\n    this._products = products => {\n      if (this.state.search.length > 0 && products.length > 0) {\n        let fuse = new Fuse(products, this.options);\n        var result = fuse.search(this.state.search);\n        return result;\n      }\n\n      return products;\n    };\n\n    this._onChangeSearch = e => {\n      this.setState({\n        search: e.target.value\n      });\n    };\n\n    this.state = {\n      search: ''\n    };\n  }\n\n  render() {\n    return React.createElement(AppContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, context => React.createElement(\"div\", {\n      className: \"Products\",\n      style: {\n        margin: 3 + 'em'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Producto\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Costo de producci\\xF3n\\xA0\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Precio de venta\\xA0\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Descripci\\xF3n\\xA0\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Stock\\xA0\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Categor\\xEDa\\xA0\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, context.state.products.map(product => React.createElement(TableRow, {\n      hover: true,\n      key: product.product_id,\n      onClick: () => this._handleProductClick(product),\n      style: {\n        cursor: 'pointer'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, product.product_name), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"$\", product.cost_price), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"$\", product.selling_price), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, product.description), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, product.stock), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, product.category_name)))))), React.createElement(\"div\", {\n      className: \"CustomersSearchBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      className: \"input\",\n      label: \"B\\xFAsqueda\",\n      value: this.state.search,\n      onChange: this._onChangeSearch,\n      styles: {\n        fieldGroup: {\n          width: 300\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst data = [{\n  name: 'Page A',\n  uv: 4000,\n  pv: 2400,\n  amt: 2400,\n  dmt: 2400\n}, {\n  name: 'Page B',\n  uv: 3000,\n  pv: 1398,\n  amt: 2210,\n  dmt: 2400\n}, {\n  name: 'Page C',\n  uv: 2000,\n  pv: 9800,\n  amt: 2290,\n  dmt: 2400\n}, {\n  name: 'Page D',\n  uv: 2780,\n  pv: 3908,\n  amt: 2000,\n  dmt: 2400\n}, {\n  name: 'Page E',\n  uv: 1890,\n  pv: 4800,\n  amt: 2181,\n  dmt: 2400\n}, {\n  name: 'Page F',\n  uv: 2390,\n  pv: 3800,\n  amt: 2500,\n  dmt: 2400\n}, {\n  name: 'Page G',\n  uv: 3490,\n  pv: 4300,\n  amt: 2100,\n  dmt: 2400\n}];\n\nclass ProductsStatistics extends React.Component {\n  constructor() {\n    super();\n\n    this._setData = () => {\n      let yearSales = this.props.sales.map(sale => {\n        if (new Date(sale.sale_date).getFullYear() === this.state.year) return sale;\n      });\n      let january = [],\n          february = [],\n          march = [],\n          april = [],\n          may = [],\n          june = [],\n          july = [],\n          august = [],\n          september = [],\n          october = [],\n          november = [],\n          december = [];\n      yearSales.map(sale => {\n        if (new Date(sale.sale_date).getMonth() === 0) january.push(sale);\n        if (new Date(sale.sale_date).getMonth() === 1) february.push(sale);\n        if (new Date(sale.sale_date).getMonth() === 2) march.push(sale);\n        if (new Date(sale.sale_date).getMonth() === 3) april.push(sale);\n        if (new Date(sale.sale_date).getMonth() === 4) may.push(sale);\n        if (new Date(sale.sale_date).getMonth() === 5) june.push(sale);\n        if (new Date(sale.sale_date).getMonth() === 6) july.push(sale);\n        if (new Date(sale.sale_date).getMonth() === 7) august.push(sale);\n        if (new Date(sale.sale_date).getMonth() === 8) september.push(sale);\n        if (new Date(sale.sale_date).getMonth() === 9) october.push(sale);\n        if (new Date(sale.sale_date).getMonth() === 10) november.push(sale);\n        if (new Date(sale.sale_date).getMonth() === 11) december.push(sale);\n      });\n      this.setState({\n        january,\n        february,\n        march,\n        april,\n        may,\n        june: june,\n        july,\n        august,\n        september,\n        october,\n        november,\n        december\n      });\n    };\n\n    this._setProducts = () => {\n      let products = this.props.producs;\n    };\n\n    this.state = {\n      products: [],\n      data: [],\n      year: 2019,\n      january: [],\n      february: [],\n      march: [],\n      april: [],\n      may: [],\n      june: [],\n      july: [],\n      august: [],\n      september: [],\n      october: [],\n      november: [],\n      december: []\n    };\n  }\n\n  componentDidMount() {\n    this._setData();\n  }\n\n  render() {\n    return React.createElement(AreaChart, {\n      width: 500,\n      height: 400,\n      data: data,\n      margin: {\n        top: 10,\n        right: 30,\n        left: 0,\n        bottom: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      dataKey: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(Area, {\n      type: \"monotone\",\n      dataKey: \"uv\",\n      stackId: \"1\",\n      stroke: \"#8884d8\",\n      fill: \"#8884d8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(Area, {\n      type: \"monotone\",\n      dataKey: \"pv\",\n      stackId: \"1\",\n      stroke: \"#82ca9d\",\n      fill: \"#82ca9d\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), React.createElement(Area, {\n      type: \"monotone\",\n      dataKey: \"amt\",\n      stackId: \"1\",\n      stroke: \"#ffc658\",\n      fill: \"#ffc658\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), React.createElement(Area, {\n      type: \"monotone\",\n      dataKey: \"amt\",\n      stackId: \"1\",\n      stroke: \"#404040\",\n      fill: \"#515151\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Products;","map":{"version":3,"sources":["/Users/alexandroaguilar/Desarrollo/tiburon-master/aPOS/src/components/Products.js"],"names":["React","AppContext","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","Table","TableBody","TableCell","TableHead","TableRow","Paper","TextField","Fuse","axios","Products","Component","constructor","_handleProductClick","product","props","_setProduct","_setView","_products","products","state","search","length","fuse","options","result","_onChangeSearch","e","setState","target","value","render","context","margin","map","product_id","cursor","product_name","cost_price","selling_price","description","stock","category_name","fieldGroup","width","data","name","uv","pv","amt","dmt","ProductsStatistics","_setData","yearSales","sales","sale","Date","sale_date","getFullYear","year","january","february","march","april","may","june","july","august","september","october","november","december","getMonth","push","_setProducts","producs","componentDidMount","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React from 'react';\nimport AppContext from '../context/AppContext';\nimport {AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip,} from 'recharts';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport Fuse from 'fuse.js';\nimport axios from 'axios';\n\nclass Products extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      search: ''\n    }\n  }\n\n  _handleProductClick = (product) => {\n    this.props._setProduct(product)\n    this.props._setView(2);\n  }\n\n  _products = (products) => {\n    if(this.state.search.length > 0 && products.length > 0) {\n      let fuse = new Fuse(products, this.options);\n      var result = fuse.search(this.state.search);\n      return result;\n    }\n    return products;\n  }\n\n  _onChangeSearch = (e) => {\n    this.setState({\n      search: e.target.value\n    });\n  }\n\n  render() {\n    return (\n      <AppContext.Consumer>\n      \t{context => (\n          <div className=\"Products\" style={{margin: 3 + 'em'}}>\n            <Paper >\n              <Table >\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Producto</TableCell>\n                    <TableCell align=\"right\">Costo de producción&nbsp;</TableCell>\n                    <TableCell align=\"right\">Precio de venta&nbsp;</TableCell>\n                    <TableCell align=\"right\">Descripción&nbsp;</TableCell>\n                    <TableCell align=\"right\">Stock&nbsp;</TableCell>\n                    <TableCell align=\"right\">Categoría&nbsp;</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {context.state.products.map(product => (\n                    <TableRow hover key={product.product_id} onClick={() => this._handleProductClick(product)} style={{cursor: 'pointer'}}>\n                      <TableCell component=\"th\" scope=\"row\">{product.product_name}</TableCell>\n                      <TableCell align=\"right\">${product.cost_price}</TableCell>\n                      <TableCell align=\"right\">${product.selling_price}</TableCell>\n                      <TableCell align=\"right\">{product.description}</TableCell>\n                      <TableCell align=\"right\">{product.stock}</TableCell>\n                      <TableCell align=\"right\">{product.category_name}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Paper>\n            <div className=\"CustomersSearchBox\">\n              <TextField\n                className=\"input\"\n                label=\"Búsqueda\"\n                value={this.state.search}\n                onChange={this._onChangeSearch}\n                styles={{ fieldGroup: { width: 300 } }}\n              />\n            </div> \n            {/*<Paper style={{marginTop: 1 + 'em', display: 'flexbox', flexDirection: 'row'}}>\n              <ProductsStatistics sales={this.props.sales}/>\n                  </Paper>*/}\n          </div>\n      \t)}\n      </AppContext.Consumer>\n    );\n  }\n}\n\nconst data = [\n  {\n    name: 'Page A', uv: 4000, pv: 2400, amt: 2400, dmt: 2400,\n  },\n  {\n    name: 'Page B', uv: 3000, pv: 1398, amt: 2210, dmt: 2400,\n  },\n  {\n    name: 'Page C', uv: 2000, pv: 9800, amt: 2290, dmt: 2400,\n  },\n  {\n    name: 'Page D', uv: 2780, pv: 3908, amt: 2000, dmt: 2400,\n  },\n  {\n    name: 'Page E', uv: 1890, pv: 4800, amt: 2181, dmt: 2400,\n  },\n  {\n    name: 'Page F', uv: 2390, pv: 3800, amt: 2500, dmt: 2400,\n  },\n  {\n    name: 'Page G', uv: 3490, pv: 4300, amt: 2100, dmt: 2400,\n  },\n];\n\nclass ProductsStatistics extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      products: [],\n      data: [],\n      year: 2019,\n      january: [],\n      february: [],\n      march: [],\n      april: [],\n      may: [],\n      june: [],\n      july: [],\n      august: [],\n      september: [],\n      october: [],\n      november: [],\n      december: []\n    }\n  }\n\n  componentDidMount() {\n    this._setData();\n  }\n\n  _setData = () => {\n    let yearSales = this.props.sales.map(sale => {\n      if(new Date(sale.sale_date).getFullYear() === this.state.year)\n       return sale;\n    });\n    let january = [], february = [], march = [], april = [], may = [], june = [], july = [], august = [], september = [], october = [], november = [], december = [];\n    yearSales.map(sale => {\n      if(new Date(sale.sale_date).getMonth() === 0)\n        january.push(sale);\n      if(new Date(sale.sale_date).getMonth() === 1)\n        february.push(sale);\n      if(new Date(sale.sale_date).getMonth() === 2)\n        march.push(sale);\n      if(new Date(sale.sale_date).getMonth() === 3)\n        april.push(sale);\n      if(new Date(sale.sale_date).getMonth() === 4)\n        may.push(sale);\n      if(new Date(sale.sale_date).getMonth() === 5)\n        june.push(sale);\n      if(new Date(sale.sale_date).getMonth() === 6)\n        july.push(sale);\n      if(new Date(sale.sale_date).getMonth() === 7)\n        august.push(sale);\n      if(new Date(sale.sale_date).getMonth() === 8)\n        september.push(sale);\n      if(new Date(sale.sale_date).getMonth() === 9)\n        october.push(sale);\n      if(new Date(sale.sale_date).getMonth() === 10)\n        november.push(sale);\n      if(new Date(sale.sale_date).getMonth() === 11)\n        december.push(sale);\n    });\n    \n    this.setState({\n      january,\n      february,\n      march,\n      april,\n      may,\n      june: june,\n      july,\n      august,\n      september,\n      october,\n      november,\n      december\n    });\n  }\n\n  _setProducts = () => {\n    let products = this.props.producs\n  }\n\n  render() {\n    return (\n      <AreaChart\n        width={500}\n        height={400}\n        data={data}\n        margin={{\n          top: 10, right: 30, left: 0, bottom: 0,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Area type=\"monotone\" dataKey=\"uv\" stackId=\"1\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n        <Area type=\"monotone\" dataKey=\"pv\" stackId=\"1\" stroke=\"#82ca9d\" fill=\"#82ca9d\" />\n        <Area type=\"monotone\" dataKey=\"amt\" stackId=\"1\" stroke=\"#ffc658\" fill=\"#ffc658\" />\n        <Area type=\"monotone\" dataKey=\"amt\" stackId=\"1\" stroke=\"#404040\" fill=\"#515151\" />\n      </AreaChart>\n    );\n  }\n}\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}