{"ast":null,"code":"import _objectSpread from \"/Users/alexandroaguilar/Desarrollo/tiburon-master/aPOS/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/alexandroaguilar/Desarrollo/tiburon-master/aPOS/src/screens/CustomersScreen.js\";\nimport React from 'react';\nimport { CommandBar } from 'office-ui-fabric-react/lib/CommandBar';\nimport { CommandBarButton } from 'office-ui-fabric-react/lib/Button';\nimport { DirectionalHint } from 'office-ui-fabric-react/lib/Callout';\nimport Customers from '../components/Customers';\nimport NewCustomer from '../components/NewCustomer';\nimport Customer from '../components/Customer';\nimport NewDeposit from '../components/NewDeposit';\nimport AppContext from '../context/AppContext';\n\nconst customButton = props => {\n  const buttonOnMouseClick = () => {\n    props.onClick();\n  };\n\n  return React.createElement(CommandBarButton, Object.assign({}, props, {\n    onClick: buttonOnMouseClick,\n    styles: _objectSpread({}, props.styles, {\n      textContainer: {\n        fontSize: 18\n      },\n      icon: {\n        color: '#0078d4'\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }));\n};\n\nclass CustomersScreen extends React.Component {\n  constructor() {\n    super();\n\n    this._setView = view => {\n      this.setState({\n        view\n      });\n    };\n\n    this._setCustomer = customer => {\n      this.setState({\n        customer\n      });\n    };\n\n    this.getItems = () => {\n      return [{\n        key: 'clientes',\n        name: 'Clientes',\n        cacheKey: 'myCacheKey',\n        // changing this key will invalidate this items cache\n        iconProps: {\n          iconName: 'Group'\n        },\n        ariaLabel: 'Clientes',\n        onClick: () => this._setView(0)\n      }, {\n        key: 'nuevo',\n        name: 'Nuevo',\n        iconProps: {\n          iconName: 'Add'\n        },\n        onClick: () => this._setView(1)\n      }, {\n        key: 'pago',\n        name: 'Agregar pago',\n        iconProps: {\n          iconName: 'Money'\n        },\n        onClick: () => this._setView(3)\n      }];\n    };\n\n    this.state = {\n      view: 0,\n      customer: null\n    };\n  }\n\n  render() {\n    return React.createElement(AppContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, context => React.createElement(\"div\", {\n      className: \"CustomersScreen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(CommandBar, {\n      overflowButtonProps: {\n        ariaLabel: 'More commands',\n        menuProps: {\n          items: [],\n          // Items must be passed for typesafety, but commandBar will determine items rendered in overflow\n          isBeakVisible: true,\n          beakWidth: 20,\n          gapSpace: 10,\n          directionalHint: DirectionalHint.topCenter\n        }\n      },\n      buttonAs: customButton,\n      items: this.getItems(),\n      ariaLabel: 'Use left and right arrow keys to navigate between commands',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), this.state.view === 0 ? React.createElement(Customers, {\n      _setView: this._setView,\n      _setCustomer: this._setCustomer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }) : null, this.state.view === 1 ? React.createElement(NewCustomer, {\n      _setView: this._setView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }) : null, this.state.view === 2 ? React.createElement(Customer, {\n      _setView: this._setView,\n      customer: this.state.customer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }) : null, this.state.view === 3 ? React.createElement(NewDeposit, {\n      customers: context.state.customers,\n      products: context.state.products,\n      _showAlert: context._showAlert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }) : null));\n  }\n\n}\n\nexport default CustomersScreen;","map":{"version":3,"sources":["/Users/alexandroaguilar/Desarrollo/tiburon-master/aPOS/src/screens/CustomersScreen.js"],"names":["React","CommandBar","CommandBarButton","DirectionalHint","Customers","NewCustomer","Customer","NewDeposit","AppContext","customButton","props","buttonOnMouseClick","onClick","styles","textContainer","fontSize","icon","color","CustomersScreen","Component","constructor","_setView","view","setState","_setCustomer","customer","getItems","key","name","cacheKey","iconProps","iconName","ariaLabel","state","render","context","menuProps","items","isBeakVisible","beakWidth","gapSpace","directionalHint","topCenter","customers","products","_showAlert"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { CommandBar } from 'office-ui-fabric-react/lib/CommandBar';\nimport { CommandBarButton } from 'office-ui-fabric-react/lib/Button';\nimport { DirectionalHint } from 'office-ui-fabric-react/lib/Callout';\nimport Customers from '../components/Customers';\nimport NewCustomer from '../components/NewCustomer';\nimport Customer from '../components/Customer';\nimport NewDeposit from '../components/NewDeposit';\nimport AppContext from '../context/AppContext';\n\nconst customButton = (props) => {\n  const buttonOnMouseClick = () => {\n    props.onClick()\n  }\n\n  return (\n    <CommandBarButton\n      {...props}\n      onClick={buttonOnMouseClick}\n      styles={{\n        ...props.styles,\n        textContainer: { fontSize: 18 },\n        icon: { color: '#0078d4' }\n      }}\n    />\n  );\n};\n\nclass CustomersScreen extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      view: 0,\n      customer: null\n    }\n  }\n\n  _setView = (view) => {\n    this.setState({\n      view\n    })\n  }\n\n  _setCustomer = (customer) => {\n    this.setState({\n      customer\n    })\n  }\n\n  getItems = () => {\n    return [\n      {\n        key: 'clientes',\n        name: 'Clientes',\n        cacheKey: 'myCacheKey', // changing this key will invalidate this items cache\n        iconProps: {\n          iconName: 'Group'\n        },\n        ariaLabel: 'Clientes',\n        onClick: () => this._setView(0)\n      },\n      {\n        key: 'nuevo',\n        name: 'Nuevo',\n        iconProps: {\n          iconName: 'Add'\n        },\n        onClick: () => this._setView(1)\n      },\n      {\n        key: 'pago',\n        name: 'Agregar pago',\n        iconProps: {\n          iconName: 'Money'\n        },\n        onClick: () => this._setView(3)\n      },\n    ];\n  };\n\n    render() {\n    return (\n      <AppContext.Consumer>\n      \t{context => (\n          <div className=\"CustomersScreen\">\n            <CommandBar\n              overflowButtonProps={{\n                ariaLabel: 'More commands',\n                menuProps: {\n                  items: [], // Items must be passed for typesafety, but commandBar will determine items rendered in overflow\n                  isBeakVisible: true,\n                  beakWidth: 20,\n                  gapSpace: 10,\n                  directionalHint: DirectionalHint.topCenter\n                }\n              }}\n              buttonAs={customButton}\n              items={this.getItems()}\n              ariaLabel={'Use left and right arrow keys to navigate between commands'}\n            />\n            { this.state.view === 0 ? <Customers _setView={this._setView} _setCustomer={this._setCustomer}/> : null }\n            { this.state.view === 1 ? <NewCustomer _setView={this._setView}/> : null }\n            { this.state.view === 2 ? <Customer _setView={this._setView} customer={this.state.customer}/> : null }\n            { this.state.view === 3 ? <NewDeposit customers={context.state.customers} products={context.state.products} _showAlert={context._showAlert}/> : null }\n          </div>          \n      \t)}\n      </AppContext.Consumer>\n    );\n  }\n  \n}\n\nexport default CustomersScreen;\n"]},"metadata":{},"sourceType":"module"}