{"ast":null,"code":"import { TooltipDelay } from './Tooltip.types';\nimport { AnimationClassNames } from '../../Styling';\nexport var getStyles = function getStyles(props) {\n  var className = props.className,\n      delay = props.delay,\n      _a = props.beakWidth,\n      beakWidth = _a === void 0 ? 16 : _a,\n      _b = props.gapSpace,\n      gapSpace = _b === void 0 ? 0 : _b,\n      maxWidth = props.maxWidth,\n      theme = props.theme;\n  var palette = theme.palette,\n      fonts = theme.fonts; // The math here is done to account for the 45 degree rotation of the beak\n\n  var tooltipGapSpace = -(Math.sqrt(beakWidth * beakWidth / 2) + gapSpace);\n  return {\n    root: ['ms-Tooltip', theme.fonts.medium, AnimationClassNames.fadeIn200, {\n      background: palette.white,\n      padding: '8px',\n      animationDelay: '300ms',\n      maxWidth: maxWidth,\n      selectors: {\n        ':after': {\n          content: \"''\",\n          position: 'absolute',\n          bottom: tooltipGapSpace,\n          left: tooltipGapSpace,\n          right: tooltipGapSpace,\n          top: tooltipGapSpace\n        }\n      }\n    }, delay === TooltipDelay.zero && {\n      animationDelay: '0s'\n    }, delay === TooltipDelay.long && {\n      animationDelay: '500ms'\n    }, className],\n    content: ['ms-Tooltip-content', fonts.small, {\n      color: palette.neutralPrimary,\n      wordWrap: 'break-word',\n      overflowWrap: 'break-word',\n      overflow: 'hidden'\n    }],\n    subText: ['ms-Tooltip-subtext', {\n      // Using inherit here to avoid unintentional global overrides of the <p> tag.\n      fontSize: 'inherit',\n      fontWeight: 'inherit',\n      color: 'inherit',\n      margin: 0\n    }]\n  };\n};","map":null,"metadata":{},"sourceType":"module"}